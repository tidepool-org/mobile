// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots DebugSettingsScreen default 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "flex": 1,
      "paddingTop": 0,
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    visible={true}
  >
    <RCTSafeAreaView
      style={
        Object {
          "backgroundColor": "#f7f7f8",
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 8,
            },
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Image
            source={1}
            style={
              Array [
                Object {
                  "height": 32,
                  "width": 32,
                },
              ]
            }
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "alignSelf": "center",
                "color": "#3c3c3c",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 17.5,
              },
            ]
          }
        >
          Debug Settings
        </Text>
        <View
          style={
            Array [
              Object {
                "height": 32,
                "width": 32,
              },
            ]
          }
        />
      </View>
      <View
        style={null}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#4d4e4c",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 15,
              },
              Object {
                "marginBottom": 8,
                "marginLeft": 15,
                "marginTop": 8,
              },
            ]
          }
        >
          TIDEPOOL ENVIRONMENT
        </Text>
        <RCTScrollView
          ItemSeparatorComponent={[Function]}
          data={
            Array [
              Object {
                "name": "Development",
              },
              Object {
                "name": "Staging",
              },
              Object {
                "name": "Integration",
              },
              Object {
                "name": "Production",
              },
            ]
          }
          disableVirtualization={false}
          extraData={null}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          invertStickyHeaders={undefined}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEnabled={false}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "borderBottomWidth": 1,
                "borderColor": "#9b9b9b",
                "borderTopWidth": 1,
              },
            ]
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={null}
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "padding": 8,
                        "paddingLeft": 16,
                      },
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#281946",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 15,
                        },
                        Object {
                          "color": "#281946",
                          "flex": 1,
                        },
                      ]
                    }
                  >
                    Development
                  </Text>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#CED0CE",
                      "height": 0.5,
                    },
                  ]
                }
              />
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={null}
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "padding": 8,
                        "paddingLeft": 16,
                      },
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#281946",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 15,
                        },
                        Object {
                          "color": "#281946",
                          "flex": 1,
                        },
                      ]
                    }
                  >
                    Staging
                  </Text>
                  <View
                    style={
                      Array [
                        Object {
                          "alignSelf": "center",
                          "backgroundColor": "transparent",
                          "borderBottomWidth": 2,
                          "borderColor": "#627cff",
                          "borderLeftWidth": 2,
                          "height": 6,
                          "marginLeft": 12,
                          "transform": Array [
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                          "width": 13,
                        },
                      ]
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#CED0CE",
                      "height": 0.5,
                    },
                  ]
                }
              />
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={null}
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "padding": 8,
                        "paddingLeft": 16,
                      },
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#281946",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 15,
                        },
                        Object {
                          "color": "#281946",
                          "flex": 1,
                        },
                      ]
                    }
                  >
                    Integration
                  </Text>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#CED0CE",
                      "height": 0.5,
                    },
                  ]
                }
              />
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={null}
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "padding": 8,
                        "paddingLeft": 16,
                      },
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#281946",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 15,
                        },
                        Object {
                          "color": "#281946",
                          "flex": 1,
                        },
                      ]
                    }
                  >
                    Production
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </RCTSafeAreaView>
  </Modal>
</RCTSafeAreaView>
`;
